<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/jdbc  http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd">

    <!-- 원래꺼 -->
   	<bean id="egov.propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/egovframework/batch/properties/globals.properties</value>
            </list>
        </property>
    </bean>

    <!-- application.yml 속성 로딩을 위한 YamlPropertiesFactoryBean -->
    <!-- globals.properties와 application.yml을 함께 로딩 -->
    <!-- 
    <bean id="yamlProperties" class="org.springframework.beans.factory.config.YamlPropertiesFactoryBean">
        <property name="resources" value="classpath:application.yml" />
    </bean>
    <bean id="egov.propertyConfigurer" class="org.springframework.beans.factory.config.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/egovframework/batch/properties/globals.properties</value>
            </list>
        </property>
        <property name="properties" ref="yamlProperties" />
    </bean>
     -->

    <!-- 스테이징 MySQL (Primary) 데이타소스 -->
    <bean id="dataSource-stg" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${Globals.Stg.DriverClassName}"/>
        <property name="url" value="${Globals.Stg.Url}" />
        <property name="username" value="${Globals.Stg.UserName}"/>
        <property name="password" value="${Globals.Stg.Password}"/>
    </bean>

	<!-- 운영 MySQL용 데이타소스 -->
    <bean id="dataSource-local" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${Globals.Local.DriverClassName}"/>
        <property name="url" value="${Globals.Local.Url}" />
        <property name="username" value="${Globals.Local.UserName}"/>
        <property name="password" value="${Globals.Local.Password}"/>
    </bean>

    <!-- Remote1 CUBRID 데이타소스 -->
    <bean id="dataSource-remote1" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${Globals.Remote1.DriverClassName}"/>
        <property name="url" value="${Globals.Remote1.Url}" />
        <property name="username" value="${Globals.Remote1.UserName}"/>
        <property name="password" value="${Globals.Remote1.Password}"/>
    </bean>

    <!-- 스테이징 MySQL (Primary) 데이타소스를 사용하는 JdbcTemplate -->
    <bean id="jdbcTemplateStg" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource-stg" />
    </bean>
    
    <!-- 운영 MySQL용 데이타소스를 사용하는 JdbcTemplate -->
    <bean id="jdbcTemplateLocal" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource-local" />
    </bean>
    
    <!-- Remote1 CUBRID 데이타소스를 사용하는 JdbcTemplate -->
    <bean id="jdbcTemplateRemote1" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource-remote1" />
    </bean>

    <alias name="dataSource-stg" alias="dataSource"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" lazy-init="true">
        <property name="dataSource" ref="dataSource" />
    </bean>

	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />

	<bean id="customEditorConfigurer" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="int[]" value="org.springframework.batch.support.IntArrayPropertyEditor" />
			</map>
		</property>
	</bean>

</beans>
